<?php/***************************************************************************  Copyright (c) 2012, 长沙理工大学*              All rights reserved.**  文件名称：mysql.inc.php*  文件标识：MySQL数据库类1.0*  文件摘要：MySQL数据库类1.0*  作    用：MySQL数据库操作类。MySQL常用操作、分页、导入与导出SQL文件、			 获取IP、MySQL错误提示等*  修改历史： * 			 版本    日期        作者                修改内容 *  			 ------  ----------  ------------------  ----------------------------* 			 V1.0    2012.03.29  卢郴群(泥巴)        完成基本功能**************************************************************************/class MySql{	private $host;			 // 数据库主机	private $user;			 // 数据库用户名	private $pass;			 // 数据库密码	private $data;			 // 数据库名	private $conn;			 // 数据库连接标识	private $sql;			 // sql语句	private $code;	 		 // 数据库编码，GBK,UTF8,GB2312	private $result;		 // 执行query命令的结果数据集	private $errLog=false;	 // 是否开启错误日志，默认开启	private $showErr=true;	 // 显示所有错误，具有安全隐患，默认开启	public $pageNo=1;	     // 当前页	public $pageAll=1;		 // 总页数	public $rsAll=0;		 // 总记录	public $pageSize=10;	 // 每页显示记录页数/**************************************************************************  函 数 名：__construct($host,$user,$pass,$data,$code,$conn)*  说    明：构造函数*  输入参数：$host 数据库主机地址			 $user 数据库用户名			 $pass 数据库密码			 $data 数据库名			 $conn 数据库连接标识			 $code 数据库编码*  返 回 值：无*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function __construct($host="",$user=SAE_MYSQL_USER,$pass=SAE_MYSQL_PASS,$data=SAE_MYSQL_DB,$code='gb2312',$conn='conn'){	$this->host=SAE_MYSQL_HOST_M.':'.SAE_MYSQL_PORT;	$this->user=$user;	$this->pass=$pass;	$this->data=$data;	$this->conn=$conn;	$this->code=$code;	$this->connect();}public function __get($name){	return $this->$name;}public function __set($name,$value){	$this->$name=$value;}/**************************************************************************  函 数 名：connect()*  说    明：数据库连接函数*  输入参数：无*  返 回 值：无*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	private function connect(){	if ($this->conn=='pconn') 		$this->conn=mysql_pconnect($this->host,$this->user,$this->pass); // 永久链接	else 		$this->conn=mysql_connect($this->host,$this->user,$this->pass); // 临时链接			if (!$this->conn) 		$this->show_error('无法连接服务器');			$this->select_db($this->data);	$this->query('SET NAMES '.$this->code);	$this->query("SET CHARACTER_SET_CLIENT='{$this->code}'"); 	$this->query("SET CHARACTER_SET_RESULTS='{$this->code}'");}/**************************************************************************  函 数 名：select_db($data)*  说    明：数据库选择*  输入参数：$data 数据库名*  返 回 值：bool			 true 成功			 false 失败*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function select_db($data){	$result=mysql_select_db($data,$this->conn);	if (!$result) 		$this->show_error('无法连接数据库'.$data);	return $result;}/**************************************************************************  函 数 名：get_info($num)*  说    明：取得 MySQL 服务器信息*  输入参数：$num 信息值(选填)*  返 回 值：字符串*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function get_info($num){	switch ($num)	{	case 1:		return mysql_get_server_info(); // 取得 MySQL 服务器信息		break;	case 2:		return mysql_get_host_info();   // 取得 MySQL 主机信息		break;	case 3:		return mysql_get_proto_info();  // 取得 MySQL 协议信息		break;	default:		return mysql_get_client_info(); // 取得 MySQL 客户端信息	}}/**************************************************************************  函 数 名：query($sql)*  说    明：数据库执行语句，可执行查询添加修改删除等任何sql语句*  输入参数：$sql sql语句*  返 回 值：bool			 true 执行成功			 false 执行失败*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function query($sql){	if (empty($sql)) 		$this->show_error('SQL语句为空');			$this->sql=preg_replace('/ {2,}/',' ',trim($sql));	$this->result=mysql_query($this->sql,$this->conn);		if (!$this->result) 		$this->show_error('SQL语句有误',true);	return $this->result;}/**************************************************************************  函 数 名：create_db($data)*  说    明：创建添加新的数据库*  输入参数：$data 数据库名称(必填)*  返 回 值：无*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function create_database($data=''){	$this->query("CREATE DATABASE {$data}");}/**************************************************************************  函 数 名：show_database()*  说    明：查询服务器所有数据库*  输入参数：无*  返 回 值：服务器所有数据库*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function show_database(){	$this->query('SHOW DATABASES');	$db=array();	while ($row=$this->fetch_array()) 		$db[]=$row['Database'];	return $db;}/**************************************************************************  函 数 名：show_tables($data='')*  说    明：查询数据库下所有的表*  输入参数：$data 数据库名(必填)*  返 回 值：无*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function show_tables($data=''){	if (!empty($data)) 		$db=' FROM '.$data;	$this->query('SHOW TABLES'.$data);	$tables=array();	while ($row=$this->fetch_row()) 		$tables[]=$row[0];	return $tables;}/**************************************************************************  函 数 名：copy_tables($tb1,$tb2,$where)*  说    明：复制表*  输入参数：$tb1 新表名(必填)			 $tb2 待复制表的表名(必填)			 $Condition 复制条件(选填)*  返 回 值：bool*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function copy_tables($tb1,$tb2,$Condition=''){	$this->query("SELECT * INTO `{$tb1}` FROM `{$tb2}` {$Condition}");}/**************************************************************************  函 数 名：Get($Table,$Fileds,$Condition,$Rows)*  说    明：查询数据*  输入参数：$Table 表名(必填)			 $Fileds 字段名，默认为所有(选填)		  	 $Condition 查询条件(选填)			 $Rows 待查询记录条数，为0表示不限制(选填)*  返 回 值：bool*  实	 例：$DB->Get('mydb','user,password','order by id desc',10)*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function Get($Table,$Fileds='*',$Condition='',$Rows=0){	if (!$Fileds) 		$Fileds='*';	if ($Rows>0) 		$Condition.=" LIMIT 0,{$Rows}";	$sql="SELECT {$Fileds} FROM `{$Table}` {$Condition}";	return $this->query($sql);}/**************************************************************************  函 数 名：GetRs($Table,$Fileds,$Condition)*  说    明：查询一条记录*  输入参数：$Table 表名(必填)			 $Fileds 字段名，默认为所有(选填)		  	 $Condition 查询条件(选填)*  返 回 值：bool*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function getRs($Table,$Fileds='*',$Condition=''){	if (!$Fileds) 		$Fileds='*';	$this->query("SELECT {$Fileds} FROM `{$Table}` {$Condition} LIMIT 0,1");	return $this->fetch_array();}/**************************************************************************  函 数 名：Add($Table,$Data)*  说    明：添加数据*  输入参数：$Table 表名(必填)		     $Data 待添加数据,可以为数组(必填)*  返 回 值：bool*  实	 例：$DB->Add('mydb',array('user'=>'admin','password'=>'123456','age'=>'18') 数组类型			 $DB->Add('mydb','user=admin,password=123456,age=18') 字符串类型*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/public function Add($Table,$Data){	if (!is_array($Data))	{		$arr=explode(',',$Data);		$Data=array();		foreach ($arr as $val)		{			list($key,$val)=explode('=',$val);			if (!$val) 				$val='';			$Data[$key]=$val;		}	}	$Fileds='`'.implode('`,`',array_keys($Data)).'`';	$Value="'".implode("','",array_values($Data))."'";	return $this->query("INSERT INTO `{$Table}` ({$Fileds}) VALUES ({$Value})");} /**************************************************************************  函 数 名：Set($Table,$Data,$Condition,$unQuot)*  说    明：更改数据*  输入参数：$Table 表名(必填)		     $Data 待更改数据,可以为数组(必填)		     $Condition 更改条件(选填)		     $unQuot 不需要加引号的字段，用于字段的加减运算等情况，多个字段用,分隔或者写入一个数组(选填)*  返 回 值：bool*  实	 例：$DB->Set('mydb',array('user'=>'admin','password'=>'123456','WHERE id=1') 数组类型		     $DB->Set('mydb',"user='admin',password='123456'",'WHERE id=1') 字符串类型*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function Set($Table,$Data,$Condition='',$unQuot=''){	if (is_array($Data))	{		if (!is_array($unQuot)) 			$unQuot=explode(',',$unQuot);		foreach ($Data as $key=>$val)		{			$arr[]=$key.'='.(in_array($key,$unQuot)?$val:"'$val'");		}		$Value=implode(',',$arr);	}	else 		$Value=$Data;	return $this->query("UPDATE `{$Table}` SET {$Value} {$Condition}");}/**************************************************************************  函 数 名：Del($Table,$Condition)*  说    明：删除数据*  输入参数：$Table 表名(必填)			 $Condition 删除条件(选填)*  返 回 值：bool*  实	 例：$DB->Del('mydb','id=1')*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function Del($Table,$Condition=''){	return $this->query("DELETE FROM `{$Table}`".($Condition?" WHERE {$Condition}":''));} /**************************************************************************  函 数 名：result($result)*  说    明：取得结果数据*  输入参数：$result*  返 回 值：*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function result($result=''){	if (empty($result)) 		$result=$this->result;	if ($result==null) 		$this->show_error('未获取到查询结果',true);	return mysql_result($result);}/**************************************************************************  函 数 名：fetch_array($Table,$Condition)*  说    明：根据从结果集取得的行生成关联数组*  输入参数：$result 结果集(选填)			 $type 数组类型，可以接受以下值：MYSQL_ASSOC，MYSQL_NUM 和 MYSQL_BOTH(选填)*  返 回 值：bool*  实	 例：$DB->Del('mydb','id=1')*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function fetch_array($result='',$type=MYSQL_BOTH){	if (empty($result)) 		$result=$this->result;		if (!$result) 		$this->show_error('未获取到查询结果',true);		return mysql_fetch_array($result,$type);}/**************************************************************************  函 数 名：fetch_assoc($result)*  说    明：获取关联数组,使用$row['字段名']*  输入参数：$result*  返 回 值：*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function fetch_assoc($result=''){	if (empty($result)) 		$result=$this->result;			if (!$result) 		$this->show_error('未获取到查询结果',true);			return mysql_fetch_assoc($result);}/**************************************************************************  函 数 名：fetch_row($result)*  说    明：获取数字索引数组,使用$row[0],$row[1],$row[2]*  输入参数：$result*  返 回 值：*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function fetch_row($result=''){	if (empty($result)) 		$result=$this->result;			if (!$result) 		$this->show_error('未获取到查询结果',true);	return mysql_fetch_row($result);} /**************************************************************************  函 数 名：fetch_obj($result)*  说    明：获取对象数组,使用$row->content *  输入参数：$result*  返 回 值：*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function fetch_obj($result=''){	if (empty($result)) 		$result=$this->result;			if (!$result) 		$this->show_error('未获取到查询结果',true);			return mysql_fetch_object($result);}/**************************************************************************  函 数 名：insert_id()*  说    明：取得上一步 INSERT 操作产生的 ID*  输入参数：无*  返 回 值：*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function insert_id(){	return mysql_insert_id();}/**************************************************************************  函 数 名：data_seek($id)*  说    明：指向确定的一条数据记录*  输入参数：$id*  返 回 值：*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function data_seek($id){	if ($id>0) 		$id=$id-1;			if (!mysql_data_seek($this->result,$id)) 		$this->show_error('指定的数据为空');			return $this->result; }/**************************************************************************  函 数 名：num_fields($result)*  说    明：查询字段数量*  输入参数：$Table 数据库表名(必填)*  返 回 值：字符串*  实	 例：$DB->num_fields("mydb")*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function num_fields($result=''){	if (empty($result)) 	$result=$this->result;	if (!$result) 	$this->show_error('未获取到查询结果',true);	return mysql_num_fields($result);}/**************************************************************************  函 数 名：num_rows($result)*  说    明：根据select查询结果计算结果集条数 *  输入参数：$result*  返 回 值：int 执行结果取得影响行数 *  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/		public function num_rows($result=''){ 	if (empty($result)) 		$result=$this->result;			$rows=mysql_num_rows($result);		if ($result==null)	{		$rows=0;		$this->show_error('未获取到查询结果',true);	}		return $rows>0 ? $rows:0;}/**************************************************************************  函 数 名：affected_rows()*  说    明：根据insert,update,delete执行结果取得影响行数 *  输入参数：无*  返 回 值：int 执行结果取得影响行数 *  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function affected_rows(){	return mysql_affected_rows();}/**************************************************************************  函 数 名：getQuery($unset)*  说    明：获取地址栏参数*  输入参数：$unset 表示不需要获取的参数，多个参数请用,分隔(例如:getQuery('page,sort'))*  返 回 值：无*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function getQuery($unset=''){	if (!empty($unset))	{		$arr=explode(',',$unset);		foreach ($arr as $val) 			unset($_GET[$val]);	}		foreach ($_GET as $key=>$val) 		$list[]=$key.'='.urlencode($val);			return is_array($list)?implode('&',$list):'';}/**************************************************************************  函 数 名：getPage($Table,$Fileds,$Condition,$pageSize)*  说    明：获取分页信息*  输入参数：$Table 表名(必填)			 $Fileds 字段名，默认所有字段(选填)			 $Condition 查询条件(选填)			 $pageSize 每页显示记录条数，默认10条(选填)*  返 回 值：字符串*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function getPage($Table,$Fileds='*',$Condition='',$pageSize=10){	if (intval($pageSize)>0)	{		$this->pageSize=intval($pageSize);	}		if (isset($_GET['page']) && intval($_GET['page']))	{		$this->pageNo=intval($_GET['page']);	}		if (empty($Fileds))	{		$Fileds='*';	}		$sql="SELECT * FROM `{$Table}` {$Condition}";	$this->query($sql);	$this->rsAll=$this->num_rows();		if ($this->rsAll>0)	{		$this->pageAll=ceil($this->rsAll/$this->pageSize);				if ($this->pageNo<1)		{			$this->pageNo=1;		}				if ($this->pageNo>$this->pageAll)		{			$this->pageNo=$this->pageAll;		}				$sql="SELECT {$Fileds} FROM `{$Table}` {$Condition}".$this->limit(true);		$this->query($sql);	}	return $this->rsAll;}/**************************************************************************  函 数 名：limit($str)*  说    明：构造分页limit语句，和getPage()函数搭配使用*  输入参数：$str*  返 回 值: sql 语句*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function limit($str=false){	$n=($this->pageNo-1)*$this->pageSize;	return $str?' LIMIT '.$n.','.$this->pageSize:$n;}/**************************************************************************  函 数 名：showPage($number)*  说    明：显示分页，必须和getPage()函数搭配使用*  输入参数：$number*  返 回 值：无*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function showPage($number=true){	$pageBar='';	if ($this->pageAll>1)	{			$pageBar.=chr(10);		$url=$this->getQuery('page');		$url=empty($url)?'?page=':'?'.$url.'&page=';				if ($this->pageNo>1)		{			$pageBar.='<a href="'.$url.'1">首页</a>'.chr(10);			$pageBar.='<a href="'.$url.($this->pageNo-1).'">上页</a>'.chr(10);		}		else		{			$pageBar.='<span>首页</span>'.chr(10);			$pageBar.='<span>上页</span>'.chr(10);		}				if ($number)		{			$arr=array();			if ($this->pageAll<6)			{				for ($i=0;$i<$this->pageAll;$i++) 					$arr[]=$i+1;			}			else			{				if ($this->pageNo<3)					$arr=array(1,2,3,4,5);				elseif ($this->pageNo<=$this->pageAll&&$this->pageNo>($this->pageAll-3))					for ($i=1;$i<6;$i++) 						$arr[]=$this->pageAll-5+$i;				else					for ($i=1;$i<6;$i++) 						$arr[]=$this->pageNo-3+$i;			}						foreach ($arr as $val)			{				if ($val==$this->pageNo) 					$pageBar.='<span>'.$val.'</span>'.chr(10);				else 					$pageBar.='<a href="'.$url.$val.'">'.$val.'</a>'.chr(10);			}		}				if ($this->pageNo<$this->pageAll)		{			$pageBar.='<a href="'.$url.($this->pageNo+1).'">下页</a>'.chr(10);			$pageBar.='<a href="'.$url.$this->pageAll.'">尾页</a>'.chr(10);		}		else		{			$pageBar.='<span>下页</span>'.chr(10);			$pageBar.='<span>尾页</span>'.chr(10);		}				$pageBar.='<span>';		$pageBar.="页次:{$this->pageNo}/{$this->pageAll} {$this->pageSize}条/页 总记录:{$this->rsAll} ";//		$pageBar.="转到:"."<input id=\"page\" value=\"{$this->pageNo}\" type=\"text\" onblur=\"goPage('{$url}',{$this->pageAll});\" />";		$pageBar.='</span>'.chr(10);	}	echo $pageBar;}/**************************************************************************  函 数 名：getip()*  说    明：获得客户端真实的IP地址*  输入参数：无*  返 回 值：无*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function getip(){	if ($_SERVER['HTTP_X_FORWARDED_FOR']) return $_SERVER['HTTP_X_FORWARDED_FOR'];	elseif ($_SERVER['HTTP_CLIENT_IP']) return $_SERVER['HTTP_CLIENT_IP'];	elseif ($_SERVER['REMOTE_ADDR']) return $_SERVER['REMOTE_ADDR'];	elseif (getenv('HTTP_X_FORWARDED_FOR')) return getenv('HTTP_X_FORWARDED_FOR');	elseif (getenv('HTTP_CLIENT_IP')) return getenv('HTTP_CLIENT_IP');	elseif (getenv('REMOTE_ADDR')) return getenv('REMOTE_ADDR');	else return '';}/**************************************************************************  函 数 名：show_error($message,$sql)*  说    明：输出显示错误信息*  输入参数：$msg 错误信息(必填)			 $sql 显示错误的SQL语句，在SQL语句错误时使用(选填)*  返 回 值：字符串*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function show_error($msg='',$sql=false){	$err='['.mysql_errno().']'.mysql_error();	if ($sql) 		$sql='SQL语句：'.$this->sql;			if ($this->errLog)	{		$dirs='error/'; //设置错误日志保存目录		$fileName=date('Y-m-d').'.log';		$filePath=$dirs.$fileName;				if (!is_dir($dirs))		{			$dirs=explode('/',$dirs);			$temp='';			foreach($dirs as $dir)			{				$temp.=$dir.'/';				if (!is_dir($temp))				{					mkdir($temp,0777) or die('__无法建立目录'.$temp.'，自动取消记录错误信息');				}			}			$filePath=$temp.$fileName;		}		$text="错误事件：".$msg."\r\n错误原因：".$err."\r\n".($sql?$sql."\r\n":'')."客户端IP：".$this->getip()."\r\n记录时间：".date('Y-m-d H:i:s')."\r\n\r\n";		$log='错误日志：__'.(error_log($text,3,$filePath)?'此错误信息已被自动记录到日志'.$fileName:'写入错误信息到日志失败');	}			if ($this->showErr)	{		echo '			<fieldset class="errlog">				<legend>错误信息提示</legend>				<label class="tip">错误事件：'.$err.'</label>				<label class="msg">错误原因：'.$msg.'</label>				<label class="sql">'.$sql.'</label>				<label class="log">'.$log.'</label>			</fieldset>';		exit();	}}/**************************************************************************  函 数 名：drop($table)*  说    明：删除表(请慎用,无法恢复)*  输入参数：$table 要删除的表名，默认为所有(选填)*  返 回 值：无*  实	 例：$DB->drop('mydb')*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function drop($table){	if ($table)	{		$this->query("DROP TABLE IF EXISTS `{$table}`");	}	else	{		$rst=$this->query('SHOW TABLES'); 		while ($row=$this->fetch_array())		{			$this->query("DROP TABLE IF EXISTS `{$row[0]}`");		}	}}/**************************************************************************  函 数 名：makeSql($table)*  说    明：从数据表读取信息并生成SQL语句*  输入参数：$table 待读取的表名(必填)*  返 回 值：字符串*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function makeSql($table){	$result=$this->query("SHOW CREATE TABLE `{$table}`");	$row=$this->fetch_row($result);	$sqlStr='';		if ($row)	{		$sqlStr.="-- ---------------------------------------------------------------\r\n";		$sqlStr.="-- Table structure for `{$table}`\r\n";		$sqlStr.="-- ---------------------------------------------------------------\r\n";		$sqlStr.="DROP TABLE IF EXISTS `{$table}`;\r\n{$row[1]};\r\n";		$this->Get($table);		$fields=$this->num_fields();		if ($this->num_rows()>0)		{			$sqlStr.="\r\n";			$sqlStr.="-- ---------------------------------------------------------------\r\n";			$sqlStr.="-- Records of `{$table}`\r\n";			$sqlStr.="-- ---------------------------------------------------------------\r\n";			while ($row=$this->fetch_row())			{				$comma='';				$sqlStr.="INSERT INTO `{$table}` VALUES (";								for($i=0;$i<$fields;$i++)				{					$sqlStr.=$comma."'".mysql_escape_string($row[$i])."'";					$comma=',';				}								$sqlStr.=");\r\n";			}		}		$sqlStr.="\r\n";	}	return $sqlStr;}/**************************************************************************  函 数 名：readSql($filePath)*  说    明：读取SQL文件并过滤注释*  输入参数：$filePath SQL文件路径(必填)*  返 回 值：字符串/布尔/数组*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function readSql($filePath){	if (!file_exists($filePath)) 		return false;			$sql=file_get_contents($filePath);		if (empty($sql)) 		return '';			$sql=preg_replace('/(\/\*(.*)\*\/)/s','',$sql); //过滤批量注释	$sql=preg_replace('/(--.*)|[\f\n\r\t\v]*/','',$sql); //过滤单行注释与回车换行符	$sql=preg_replace('/ {2,}/',' ',$sql); //将两个以上的连续空格替换为一个，可以省略这一步	$arr=explode(';',$sql);	$sql=array();		foreach ($arr as $str)	{		$str=trim($str);		if (!empty($str))			$sql[]=$str;	}	return $sql;}/**************************************************************************  函 数 名：saveSql($sqlPath,$table)*  说    明：将当前数据库信息保存为SQL文件*  输入参数：$sqlPath SQL文件保存路径，如果为空则自动以当前日期为文件名并保存到当前目录(选填)			 $table 待保存的表名，为空着表示保存所有信息(选填)*  返 回 值：字符串*  实	 例：$DB->saveSql('../mydb.sql');*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function saveSql($sqlPath='',$table=''){	if (empty($table))	{		$result=$this->query('SHOW TABLES');		while ($arr=$this->fetch_row($result))		{			$str=$this->makeSql($arr[0]);			if (!empty($str)) 				$sql.=$str;		}		$text="/***************************************************************\r\n";		$text.="-- Database: $this->data\r\n";		$text.="-- Date Created: ".date('Y-m-d H:i:s')."\r\n";		$text.="***************************************************************/\r\n\r\n";	}	else	{		$text='';		$sql=$this->makeSql($table);	}		if (empty($sql)) 		return false;	$text.=$sql;	$dir=dirname($sqlPath);	$file=basename($sqlPath);		if (empty($file)) 		$file=date('YmdHis').'.sql';			$sqlPath=$dir.'/'.$file;		if (!empty($dir)&&!is_dir($dir))	{		$path=explode('/',$dir);		$temp='';		foreach ($path as $dir)		{			$temp.=$dir.'/';			if (!is_dir($temp))			{				if (!mkdir($temp,0777))					return false;			}		}		$sqlPath=$temp.$file;	}		$link=fopen($sqlPath,'w+');	if (!is_writable($sqlPath)) 		return false;			return fwrite($link,$text);	fclose($link);}/**************************************************************************  函 数 名：loadSql($filePath)*  说    明：从SQL文件导入信息到数据库*  输入参数：$filePath SQL文件路径(必填)*  返 回 值：字符串*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function loadSql($filePath){	$val=$this->readSql($filePath);		if ($val==false) 		$this->show_error($filePath.'不存在');	elseif (empty($val)) 		$this->show_error($filePath.'中无有效数据');	else	{		$errList='';		foreach ($val as $sql)		{			$result=mysql_query($sql);			if (!$result) 				$errList.='执行语句'.$sql.'失败<br />';		}		return $errList;	}		return false;}/**************************************************************************  函 数 名：free()*  说    明：释放结果集*  输入参数：无*  返 回 值：无*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function free(){	mysql_free_result($this->result);}/**************************************************************************  函 数 名：close()*  说    明：关闭数据库*  输入参数：无*  返 回 值：无*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function close(){	mysql_close($this->conn);}/**************************************************************************  函 数 名：__destruct()*  说    明：析构函数，自动关闭数据库,垃圾回收机制*  输入参数：无*  返 回 值：无*  实	 例：无*  修改历史：*            姓名        日期          说明*            --------    ----------    --------------------*            泥巴        2012.04.12    完成基本功能*************************************************************************/	public function __destruct(){//	$this->free();	$this->close();}}?>